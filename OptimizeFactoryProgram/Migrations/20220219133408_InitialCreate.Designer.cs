// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OptimizeFactoryProgram.Context;

#nullable disable

namespace OptimizeFactoryProgram.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20220219133408_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OptimizeFactoryProgram.Context.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Measure")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("OptimizeFactoryProgram.Context.MaterialAvailable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Count")
                        .HasColumnType("float");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("MaterialAvailable");
                });

            modelBuilder.Entity("OptimizeFactoryProgram.Context.Price<OptimizeFactoryProgram.Context.Material>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActualDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<double>("Count")
                        .HasColumnType("float");

                    b.Property<Guid>("PriceOfId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PriceOfId");

                    b.ToTable("PricesMaterial");
                });

            modelBuilder.Entity("OptimizeFactoryProgram.Context.Price<OptimizeFactoryProgram.Context.Product>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActualDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<double>("Count")
                        .HasColumnType("float");

                    b.Property<Guid>("PriceOfId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PriceOfId");

                    b.ToTable("PricesProduct");
                });

            modelBuilder.Entity("OptimizeFactoryProgram.Context.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Measure")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("OptimizeFactoryProgram.Context.Product+Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Count")
                        .HasColumnType("float");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ProductId");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("OptimizeFactoryProgram.Context.MaterialAvailable", b =>
                {
                    b.HasOne("OptimizeFactoryProgram.Context.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("OptimizeFactoryProgram.Context.Price<OptimizeFactoryProgram.Context.Material>", b =>
                {
                    b.HasOne("OptimizeFactoryProgram.Context.Material", "PriceOf")
                        .WithMany()
                        .HasForeignKey("PriceOfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriceOf");
                });

            modelBuilder.Entity("OptimizeFactoryProgram.Context.Price<OptimizeFactoryProgram.Context.Product>", b =>
                {
                    b.HasOne("OptimizeFactoryProgram.Context.Product", "PriceOf")
                        .WithMany()
                        .HasForeignKey("PriceOfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriceOf");
                });

            modelBuilder.Entity("OptimizeFactoryProgram.Context.Product+Ingredient", b =>
                {
                    b.HasOne("OptimizeFactoryProgram.Context.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizeFactoryProgram.Context.Product", null)
                        .WithMany("Receipt")
                        .HasForeignKey("ProductId");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("OptimizeFactoryProgram.Context.Product", b =>
                {
                    b.Navigation("Receipt");
                });
#pragma warning restore 612, 618
        }
    }
}
